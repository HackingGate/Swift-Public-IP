name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    paths:
      - '.github/workflows/test.yml'
      - '**/*.swift'
      - 'Tests/**'

jobs:
  test:
    container:
      image: swift
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test with Code Coverage
      run: swift test --enable-code-coverage --filter '^((?!ipv6).)*$'
    - name: Report Codecov
      run: | 
        llvm-cov report .build/debug/SwiftPublicIPPackageTests.xctest -instr-profile=.build/debug/codecov/default.profdata -use-color
    - name: Export Codecov
      run: |
        mkdir -p coverage
        llvm-cov export -format="lcov" .build/debug/SwiftPublicIPPackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > ./coverage/lcov.info
    - name: Convert Absolute Path to Relative Path
      run: sed -i "s~${PWD}/~~g" ./coverage/lcov.info
    - uses: actions/upload-artifact@v2
      with:
        name: lcov.info
        path: ./coverage/lcov.info
        retention-days: 1
  codecov:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: lcov.info
        path: ./coverage/
    - run: ls -R
    - uses: HackingGate/lcov-reporter-action@7bf132b5f872f17fde607a37b7ca2308510abbb4
      with:
        lcov-base: ./coverage/lcov-base.info
        lcov-file: ./coverage/lcov.info
    - run: cat ./coverage/body.html
    - uses: actions/github-script@v4
      with:
        script: |
          fs = require('fs');
          fs.readFile('./coverage/body.html', 'utf8', function (error,data) {
            if (error) {
              console.log(error)
            }
            if (context.eventName === "pull_request") {
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: data
              })
            } else if (context.eventName === "push") {
              github.repos.createCommitComment({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: data
              })
            }
          });
